<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="neu.train.project.wallet.mapper.WaaWalletAccountMapper" >
  <resultMap id="BaseResultMap" type="neu.train.project.wallet.pojo.WaaWalletAccount" >
    <constructor >
      <idArg column="buyer_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="account_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="active_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="is_active" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="status" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="created_By" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="last_update_by" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="last_update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="account_type" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="hold_order_time" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="auto_pay_status" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    buyer_id, account_name, email, password, active_time, is_active, status, created_By, 
    create_time, last_update_by, last_update_time, account_type, hold_order_time, auto_pay_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="neu.train.project.wallet.pojo.WaaWalletAccountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from waa_wallet_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="neu.train.project.wallet.pojo.WaaWalletAccountExample" >
    delete from waa_wallet_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="neu.train.project.wallet.pojo.WaaWalletAccount" >
    <selectKey resultType="java.lang.Integer" keyProperty="buyerId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into waa_wallet_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      buyer_id,
      <if test="accountName != null" >
        account_name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="activeTime != null" >
        active_time,
      </if>
      <if test="isActive != null" >
        is_active,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createdBy != null" >
        created_By,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="lastUpdateBy != null" >
        last_update_by,
      </if>
      <if test="lastUpdateTime != null" >
        last_update_time,
      </if>
      <if test="accountType != null" >
        account_type,
      </if>
      <if test="holdOrderTime != null" >
        hold_order_time,
      </if>
      <if test="autoPayStatus != null" >
        auto_pay_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{buyerId,jdbcType=INTEGER},
      <if test="accountName != null" >
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="activeTime != null" >
        #{activeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isActive != null" >
        #{isActive,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateBy != null" >
        #{lastUpdateBy,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateTime != null" >
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountType != null" >
        #{accountType,jdbcType=INTEGER},
      </if>
      <if test="holdOrderTime != null" >
        #{holdOrderTime,jdbcType=CHAR},
      </if>
      <if test="autoPayStatus != null" >
        #{autoPayStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="neu.train.project.wallet.pojo.WaaWalletAccountExample" resultType="java.lang.Integer" >
    select count(*) from waa_wallet_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update waa_wallet_account
    <set >
      <if test="record.buyerId != null" >
        buyer_id = #{record.buyerId,jdbcType=INTEGER},
      </if>
      <if test="record.accountName != null" >
        account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.activeTime != null" >
        active_time = #{record.activeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isActive != null" >
        is_active = #{record.isActive,jdbcType=CHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createdBy != null" >
        created_By = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastUpdateBy != null" >
        last_update_by = #{record.lastUpdateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.lastUpdateTime != null" >
        last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.accountType != null" >
        account_type = #{record.accountType,jdbcType=INTEGER},
      </if>
      <if test="record.holdOrderTime != null" >
        hold_order_time = #{record.holdOrderTime,jdbcType=CHAR},
      </if>
      <if test="record.autoPayStatus != null" >
        auto_pay_status = #{record.autoPayStatus,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update waa_wallet_account
    set buyer_id = #{record.buyerId,jdbcType=INTEGER},
      account_name = #{record.accountName,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      active_time = #{record.activeTime,jdbcType=TIMESTAMP},
      is_active = #{record.isActive,jdbcType=CHAR},
      status = #{record.status,jdbcType=TINYINT},
      created_By = #{record.createdBy,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      last_update_by = #{record.lastUpdateBy,jdbcType=VARCHAR},
      last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      account_type = #{record.accountType,jdbcType=INTEGER},
      hold_order_time = #{record.holdOrderTime,jdbcType=CHAR},
      auto_pay_status = #{record.autoPayStatus,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="neu.train.project.wallet.pojo.WaaWalletAccount" >
    update waa_wallet_account
    <set >
      <if test="accountName != null" >
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="activeTime != null" >
        active_time = #{activeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isActive != null" >
        is_active = #{isActive,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createdBy != null" >
        created_By = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateBy != null" >
        last_update_by = #{lastUpdateBy,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateTime != null" >
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountType != null" >
        account_type = #{accountType,jdbcType=INTEGER},
      </if>
      <if test="holdOrderTime != null" >
        hold_order_time = #{holdOrderTime,jdbcType=CHAR},
      </if>
      <if test="autoPayStatus != null" >
        auto_pay_status = #{autoPayStatus,jdbcType=VARCHAR},
      </if>
    </set>
    where buyer_id = #{buyerId,jdbcType=INTEGER}
  </update>
</mapper>