<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="neu.train.project.bvo.mapper.StoreMapper">
  <resultMap id="BaseResultMap" type="neu.train.project.bvo.domain.Store">
    <id column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="dsr_id" jdbcType="INTEGER" property="dsrId" />
    <result column="platform_type" jdbcType="INTEGER" property="platformType" />
    <result column="store_name" jdbcType="VARCHAR" property="storeName" />
    <result column="authencation_code" jdbcType="VARCHAR" property="authencationCode" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_update_by" jdbcType="VARCHAR" property="lastUpdateBy" />
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="call_cnt" jdbcType="INTEGER" property="callCnt" />
    <result column="sts_cd" jdbcType="CHAR" property="stsCd" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    store_id, dsr_id, platform_type, store_name, authencation_code, created_by, create_time, 
    last_update_by, last_update_time, call_cnt, sts_cd
  </sql>
  <select id="selectByExample" parameterType="neu.train.project.bvo.domain.StoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from str_store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from str_store
    where store_id = #{storeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from str_store
    where store_id = #{storeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="neu.train.project.bvo.domain.StoreExample">
    delete from str_store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="neu.train.project.bvo.domain.Store">
    insert into str_store (store_id, dsr_id, platform_type, 
      store_name, authencation_code, created_by, 
      create_time, last_update_by, last_update_time, 
      call_cnt, sts_cd)
    values (#{storeId,jdbcType=INTEGER}, #{dsrId,jdbcType=INTEGER}, #{platformType,jdbcType=INTEGER}, 
      #{storeName,jdbcType=VARCHAR}, #{authencationCode,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastUpdateBy,jdbcType=VARCHAR}, #{lastUpdateTime,jdbcType=TIMESTAMP}, 
      #{callCnt,jdbcType=INTEGER}, #{stsCd,jdbcType=CHAR})
  </insert>

  <delete id="deleteStoreByIds" parameterType="java.lang.Integer">
    delete from str_store where store_id in
    <foreach item="storeId" collection="array" open="(" separator="," close=")">
      #{storeId}
    </foreach>
  </delete>



  <insert id="insertSelective" parameterType="neu.train.project.bvo.domain.Store">
    insert into str_store
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="storeId != null">
        store_id,
      </if>
      <if test="dsrId != null">
        dsr_id,
      </if>
      <if test="platformType != null">
        platform_type,
      </if>
      <if test="storeName != null">
        store_name,
      </if>
      <if test="authencationCode != null">
        authencation_code,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastUpdateBy != null">
        last_update_by,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
      <if test="callCnt != null">
        call_cnt,
      </if>
      <if test="stsCd != null">
        sts_cd,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="dsrId != null">
        #{dsrId,jdbcType=INTEGER},
      </if>
      <if test="platformType != null">
        #{platformType,jdbcType=INTEGER},
      </if>
      <if test="storeName != null">
        #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="authencationCode != null">
        #{authencationCode,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateBy != null">
        #{lastUpdateBy,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="callCnt != null">
        #{callCnt,jdbcType=INTEGER},
      </if>
      <if test="stsCd != null">
        #{stsCd,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="neu.train.project.bvo.domain.StoreExample" resultType="java.lang.Long">
    select count(*) from str_store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update str_store
    <set>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.dsrId != null">
        dsr_id = #{record.dsrId,jdbcType=INTEGER},
      </if>
      <if test="record.platformType != null">
        platform_type = #{record.platformType,jdbcType=INTEGER},
      </if>
      <if test="record.storeName != null">
        store_name = #{record.storeName,jdbcType=VARCHAR},
      </if>
      <if test="record.authencationCode != null">
        authencation_code = #{record.authencationCode,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastUpdateBy != null">
        last_update_by = #{record.lastUpdateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.lastUpdateTime != null">
        last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.callCnt != null">
        call_cnt = #{record.callCnt,jdbcType=INTEGER},
      </if>
      <if test="record.stsCd != null">
        sts_cd = #{record.stsCd,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update str_store
    set store_id = #{record.storeId,jdbcType=INTEGER},
      dsr_id = #{record.dsrId,jdbcType=INTEGER},
      platform_type = #{record.platformType,jdbcType=INTEGER},
      store_name = #{record.storeName,jdbcType=VARCHAR},
      authencation_code = #{record.authencationCode,jdbcType=VARCHAR},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      last_update_by = #{record.lastUpdateBy,jdbcType=VARCHAR},
      last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      call_cnt = #{record.callCnt,jdbcType=INTEGER},
      sts_cd = #{record.stsCd,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="neu.train.project.bvo.domain.Store">
    update str_store
    <set>
      <if test="dsrId != null">
        dsr_id = #{dsrId,jdbcType=INTEGER},
      </if>
      <if test="platformType != null">
        platform_type = #{platformType,jdbcType=INTEGER},
      </if>
      <if test="storeName != null">
        store_name = #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="authencationCode != null">
        authencation_code = #{authencationCode,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateBy != null">
        last_update_by = #{lastUpdateBy,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateTime != null">
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="callCnt != null">
        call_cnt = #{callCnt,jdbcType=INTEGER},
      </if>
      <if test="stsCd != null">
        sts_cd = #{stsCd,jdbcType=CHAR},
      </if>
    </set>
    where store_id = #{storeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="neu.train.project.bvo.domain.Store">
    update str_store
    set dsr_id = #{dsrId,jdbcType=INTEGER},
      platform_type = #{platformType,jdbcType=INTEGER},
      store_name = #{storeName,jdbcType=VARCHAR},
      authencation_code = #{authencationCode,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_update_by = #{lastUpdateBy,jdbcType=VARCHAR},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      call_cnt = #{callCnt,jdbcType=INTEGER},
      sts_cd = #{stsCd,jdbcType=CHAR}
    where store_id = #{storeId,jdbcType=INTEGER}
  </update>
</mapper>